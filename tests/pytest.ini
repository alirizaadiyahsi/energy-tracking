[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    e2e: End-to-end tests
    security: Security tests
    slow: Slow-running tests
    auth: Authentication related tests
    database: Database related tests
    api: API related tests
    websocket: WebSocket related tests
    mqtt: MQTT related tests

# Test execution options
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=services
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
    --asyncio-mode=auto

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[tool:coverage:run]
source = services
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */alembic/*

[tool:coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

[tool:coverage:html]
directory = htmlcov

# Test timeout (seconds)
timeout = 300
timeout_method = thread

# Pytest plugins
required_plugins =
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0

# Minimum Python version
minversion = 3.8

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
